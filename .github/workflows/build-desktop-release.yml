# This is a basic workflow to help you get started with Actions

name: Build-Desktop-Release

on:
  workflow_dispatch:
    inputs:
      tag-name:
        description: "Release Tag Name"
        required: true
      git-ref:
        description: "Release Git Ref"
        required: true

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14


  build-macos:
    runs-on: macos-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install brew & clojure
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew install clojure/tools/clojure

      - name: Build/release Electron app
        run: yarn install && yarn release-electron

      - name: Cache Artifact
        uses: actions/upload-artifact@v1
        with:
          name: Logseq-x64.dmg
          path: static/out/make/Logseq.dmg

  build-windows:
    runs-on: windows-latest
    steps:
      - name: List file
        run: Dir .

  release:
    needs: [ build-macos, build-linux, build-windows ]
    runs-on: ubuntu-latest

    steps:
      - name: Download the Linux Asset
        uses: actions/download-artifact@v1
        with:
          name: Logseq-x64.dmg
          path: .

      - name: List file
        run: ls -rl

      - name: Create Release Draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag-name }}
          release_name: TEST CI (DON'T DOWNLOAD) ${{ github.event.inputs.tag-name }}
          draft: true
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Logseq-x64.dmg
          asset_name: logseq-darwin-x64-${{ github.event.inputs.tag-name }}.dmg
          asset_content_type: application/x-apple-diskimage